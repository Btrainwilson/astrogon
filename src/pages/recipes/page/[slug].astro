---
import config from "@/config/config.json";
import { getEntries } from "@/lib/contentParser";
import { sortByDate } from "@/lib/sortFunctions";
import { getEntry } from "astro:content";
import type { RecipesEntry } from "@/types";
import RecipeGroup from "@layouts/RecipeGroup.astro";

export async function getStaticPaths() {
  const entries = await getEntries("recipes", sortByDate) as RecipesEntry[];
  const pageCount = Math.ceil(entries.length / config.settings.pagination);
  const paths = [];

  for (let i = 1; i < pageCount; i++) {
    paths.push({
      params: {
        slug: (i + 1).toString(),
      },
    });
  }
  return paths;
}

const entryIndex = await getEntry("recipes", "-index");
const entries = await getEntries("recipes", sortByDate) as RecipesEntry[];

const { slug } = Astro.params;
const currentPageIndex = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
const pageCount = Math.ceil(entries.length / config.settings.pagination);
const indexOfLastEntry = currentPageIndex * config.settings.pagination;
const indexOfFirstEntry = indexOfLastEntry - config.settings.pagination;
const currentEntries = entries.slice(indexOfFirstEntry, indexOfLastEntry);
---

<RecipeGroup
  entryIndex={entryIndex}
  entries={currentEntries}
  pageIndex={currentPageIndex}
  pageCount={pageCount}
/>
