---
import type { AuthorsEntry, BlogEntry } from "@/types";
import BlogCard from "@components/BlogCard.astro";
import AuthorSingle from "@layouts/AuthorSingle.astro";
import { getSinglePages } from "@/lib/contentParser.astro";
import { slugify } from "@/lib/utils/textConverter";
import { render } from "astro:content";
import { metadata } from "@/config/config.json";

export async function getStaticPaths() {
  const authors: AuthorsEntry[] = await getSinglePages("authors");

  const paths = authors.map((author) => ({
    params: {
      single: author.id,
    },
    props: { author },
  }));
  return paths;
}
const { author } = Astro.props;
const { title } = author.data;
const { Content } = await render(author);
const posts: BlogEntry[] = await getSinglePages("blog");
const postFilterByAuthor = posts.filter(
  (post: BlogEntry) =>
    slugify(post.data.author ? post.data.author : metadata.meta_author) ===
    slugify(title)
);
---

<AuthorSingle data={author.data}>
  <Content slot="content" />
  <Fragment slot="authoredPosts">
    {
      postFilterByAuthor.map((post) => (
        <div class="mb-12 md:col-6 lg:col-4">
          <BlogCard data={post} />
        </div>
      ))
    }
  </Fragment>
</AuthorSingle>
