---
import type { AuthorsEntry, BlogEntry } from "@/types";
import AuthorSingle from "@layouts/AuthorSingle.astro";
import { slugify } from "@/lib/utils/textConverter";
import { metadata } from "@/config/config.json";
import { getPages } from "@/lib/contentParser.astro";
import { sortByDate } from "@/lib/utils/sortFunctions";

export async function getStaticPaths() {
  const entries = (await getPages("authors")) as AuthorsEntry[];
  const paths = entries.map((entry) => ({
    params: {
      single: entry.id,
    },
    props: { entry },
  }));
  return paths;
}

const { entry } = Astro.props;
const { title } = entry.data;
const blogEntries = (await getPages("blog", sortByDate)) as BlogEntry[];
const filteredBlogEntries = blogEntries.filter(
  (entry: BlogEntry) =>
    slugify(entry.data.author ? entry.data.author : metadata.meta_author) ===
    slugify(title)
);
---

<AuthorSingle entry={entry} recentBlogEntries={filteredBlogEntries} />
