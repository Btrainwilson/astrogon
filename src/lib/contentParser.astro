---
import { getCollection } from "astro:content";

export const getSinglePages = async (collection: any): Promise<any[]> => {
  const allPage = await getCollection(collection);
  const removeIndex = allPage.filter((data: any) => data.id.match(/^(?!-)/));
  const removeDrafts = removeIndex.filter((data: any) => !data.data.draft);
  removeDrafts.sort((a, b) => {
    return a.data.order - b.data.order;
  });
  return removeDrafts;
};

// Fetch top-level folders as groups
export const getGroups = async (collection: any): Promise<any[]> => {
  const allPage = await getCollection(collection);
  const groups = allPage.filter((data: any) => {
    const segments = data.id.split("/");
    return segments.length === 1 && segments[0] !== "index";
  });
  return groups;
};

// Fetch documents within a specific group
export const getDocumentsInGroup = async (collection: any, groupSlug: string): Promise<any[]> => {
  const allPage = await getCollection(collection);
  const documents = allPage.filter((data: any) => {
    const segments = data.id.split("/");
    return segments[0] === groupSlug && segments.length > 1;
  });
  return documents;
};
---
