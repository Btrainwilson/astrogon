---
import { lowerHumanize, upperHumanize } from "@/lib/utils/textConverter";

interface Props {
  tags: string[];
  categories: string[];
  allCategories: string[];
}

const { tags, categories, allCategories }: Props = Astro.props;
---

<div class="lg:col-4">
  <!-- categories -->
  <div class="mb-8">
    <div class="rounded bg-theme-light p-6 dark:bg-darkmode-theme-light">
        <h4 class="mb-2 text-center">
          <a href="/blog/categories">Categories</a>
        </h4>
      <ul class="space-y-4">
        {
          categories.map((category: any) => {
            const count = allCategories.filter(
              (c: any) => c === category,
            ).length;
            return (
              <li>
                <a
                  class="flex justify-between hover:text-primary dark:hover:text-darkmode-primary"
                  href={`/blog/categories/${category}`}
                >
                  {upperHumanize(category)} <span>({count})</span>
                </a>
              </li>
            );
          })
        }
      </ul>
    </div>
  </div>
  <!-- tags -->
  <div class="mb-8">
    <div class="rounded bg-theme-light p-6 dark:bg-darkmode-theme-light">
      <h4 class="mb-2 text-center">
        <a href="/blog/tags">Tags</a>
      </h4>
      <ul>
        {
          tags.map((tag: any) => {
            return (
              <li class="inline-block">
                <a
                  class="m-1 block rounded bg-white px-3 py-1 hover:bg-primary hover:text-white dark:bg-darkmode-body dark:hover:bg-darkmode-primary dark:hover:text-dark"
                  href={`/blog/tags/${lowerHumanize(tag)}`}
                >
                  {tag}
                </a>
              </li>
            );
          })
        }
      </ul>
    </div>
  </div>
</div>
