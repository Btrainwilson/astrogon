---
import { IoSearch, IoClose } from "react-icons/io5/index.js";
---

<div>
  <div
    class="lg:hidden border-border text-xl flex items-center hover:rotate-12 transition-all duration-300"
  >
    <button id="mobile-search" aria-label="Search">
      <IoSearch />
    </button>
  </div>

  <span
    class="z-20 bg-theme-light dark:bg-darkmode-theme-light rounded-md max-lg:!mx-[10%] max-lg:absolute max-lg:left-0 max-lg:w-[80%] max-lg:rounded-md hidden lg:flex lg:space-x-4 flex-row-reverse py-2 px-1"
  >
    <div
      id="mobile-search-close"
      class="cursor-pointer lg:hidden lg:mr-1 flex items-center text-xl hover:rotate-12 transition-all duration-300"
    >
      <IoClose />
    </div>

    <input
      id="search"
      type="text"
      class="bg-transparent border-hidden w-full lg:w-48 focus:outline-none p-0 !mx-0"
      placeholder="Search..."
    />

    <div class="text-xl !mx-2 flex items-center">
      <IoSearch />
    </div>

    <div
      id="results"
      class="peer-placeholder-shown:hidden empty:hidden focus:block absolute top-16 max-lg:-mr-2 w-full lg:w-72 rounded-lg overflow-y-auto max-h-96 lg:max-h-72"
    >
    </div>
  </span>

  <script is:inline>
    document.querySelector("#mobile-search")?.addEventListener("click", () => {
      document
        .querySelector("#search")
        ?.parentElement.classList.toggle("hidden");
      document.querySelector("#search")?.parentElement.classList.toggle("flex");
    });

    document
      .querySelector("#mobile-search-close")
      ?.addEventListener("click", () => {
        document
          .querySelector("#search")
          ?.parentElement.classList.add("hidden");
        document
          .querySelector("#search")
          ?.parentElement.classList.remove("flex");
      });

    document.querySelector("#search")?.addEventListener("input", async (e) => {
      // only load the pagefind script once
      if (e.target.dataset.loaded !== "true") {
        e.target.dataset.loaded = "true";
        // load the pagefind script
        window.pagefind = await import("/pagefind/pagefind.js");
      }

      // search the index using the input value
      const search = await window.pagefind.search(e.target.value);

      // clear the old results
      document.querySelector("#results").innerHTML = "";

      // add the new results
      for (const result of search.results) {
        const data = await result.data();
        document.querySelector("#results").innerHTML += `
        <a href="${data.url}" class="block px-4 py-2 hover:bg-zinc-100 dark:hover:bg-zinc-700">
          <h3 class="font-bold">${data.meta.title}</h3>
          <p>${data.excerpt}</p>
        </a>`;
      }
    });
  </script>
</div>
