---
import BlogCard from "@/components/BlogCard.astro";
import Share from "@/components/Share.astro";
import config from "@/config/config.json";
import { getSinglePage } from "@/lib/contentParser.astro";
import dateFormat from "@/lib/utils/dateFormat";
import similerItems from "@/lib/utils/similarItems";
import { lowerHumanize, upperHumanize, markdownify, slugify } from "@/lib/utils/textConverter";
import { Image } from "astro:assets";
import { render } from 'astro:content';
import {
  FaRegCalendarAlt,
  FaRegFolder,
  FaRegUserCircle,
} from "react-icons/fa/index.js";

const { blog_folder } = config.settings;
const posts = await getSinglePage(blog_folder);
const { post } = Astro.props;
const similarPosts = similerItems(post, posts, post.id);
const { Content } = await render(post);
const { title, description, author, categories, image, date, tags } = post.data;

categories.sort((a: string, b: string) => a.localeCompare(b));
tags.sort((a: string, b: string) => a.localeCompare(b));
---

<section class="section pt-7">
  <div class="container">
    <div class="row justify-center">
      <article class="lg:col-10">
        {
          image && (
            <div class="mb-10">
              <Image
                src={image}
                height={500}
                width={1200}
                alt={title}
                class="w-full rounded"
                format="webp"
              />
            </div>
          )
        }
        <h1 set:html={markdownify(title)} class="mb-4" />
        <ul class="mb-4">
          <li class="mr-4 inline-block">
            <FaRegUserCircle className={"mr-2 -mt-1 inline-block"} />
            {upperHumanize(author)}
          </li>
          <li class="mr-4 inline-block">
            <FaRegCalendarAlt className={"mr-2 -mt-1 inline-block"} />
            {dateFormat(date)}
          </li>
          <li class="mr-4 inline-block">
            <FaRegFolder className={"mr-2 -mt-1 inline-block"} />
            {
              categories.map((category: string, index: number) => (
                <a href={`/blog/categories/${slugify(category)}`}>
                  {upperHumanize(category)}
                  {index !== categories.length - 1 && ","}
                </a>
              ))
            }
          </li>
        </ul>
        <div class="content mb-10">
          <Content />
        </div>
        <hr>
        <div class="row items-start justify-between mt-4">
          <div class="mb-4 flex justify-center items-center lg:justify-start lg:col-8 lg:mb-0">
            <h4 class="mr-3">Tags:</h4>
            <ul>
              {
                tags.map((tag: string) => (
                  <li class="inline-block">
                    <a
                      class="m-1 block rounded bg-theme-light px-3 py-1 hover:bg-primary hover:text-white dark:bg-darkmode-theme-light dark:hover:bg-darkmode-primary dark:hover:text-dark"
                      href={`/blog/tags/${slugify(tag)}`}
                    >
                      {lowerHumanize(tag)}
                    </a>
                  </li>
                ))
              }
            </ul>
          </div>
          <div class="flex items-center justify-center lg:justify-end lg:col-4">
            <Share
              className="social-icons"
              title={title}
              description={description}
              folder={blog_folder}
              id={post.id}
            />
          </div>
        </div>
      </article>
    </div>

    <!-- Related posts -->
    {
      similarPosts.length > 0 && (
        <div class="row justify-center pt-12 pb-0">
          <h2 class="h3 mb-4 text-center">Related Posts</h2>
          <div class="lg:col-10">
            <div class="row justify-center">
              {
                similarPosts.slice(0, 2).map((post) => (
                  <div class="md:col-6 px-4 py-2">
                    <BlogCard data={post} />
                  </div>
                ))
              }
            </div>
          </div>
        </div>
      )
    }
  </div>
</section>