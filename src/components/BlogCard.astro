---
import type { BlogEntry } from "@/types";
import config from "@/config/config.json";
import {
  upperHumanize,
  plainify,
  slugify,
  lowerHumanize,
} from "@/lib/textConverter";
import {
  FaRegFolder,
  FaRegClock,
  FaHashtag,
  FaRegCalendarAlt,
} from "react-icons/fa/index.js";
import readingTime from "@/lib/readingTime";
import Card from "@components/Card.astro";
import dateFormat from "@lib/dateFormat";

interface Props {
  entry: BlogEntry;
}

const { entry }: Props = Astro.props;
const {
  title,
  description,
  autodescription,
  date,
  author,
  categories,
  tags,
  complexity,
} = entry.data;

const entryDate = date ? dateFormat(date) : null;
const entryReadingTime = readingTime(entry.body, complexity);
const entryDescription =
  description ||
  (autodescription
    ? plainify(
        entry.body?.slice(0, Number(config.settings.blog_description_length))
      )
    : null);
---

<Card style="p-4">
  <h4 class="mb-2">
    <a href={`/blog/${entry.id}`}>
      {title}
    </a>
  </h4>
  <ul class="mb-2">
    {
      categories && (
        <li class="mr-0 inline-block">
          {categories.map((category: string, index: number) => (
            <a href={`/blog/categories/${slugify(category)}`}>
              <FaRegFolder className={"ml-2 -mt-1 inline-block"} />
              {upperHumanize(category)}
            </a>
          ))}
        </li>
      )
    }
    <!-- { tags && (
      <li class="mr-0 inline-block">
        {
          tags.map((tag: string, index: number) => (
            <a href={`/blog/tags/${slugify(tag)}`}>
              <FaHashtag className={"ml-2 -mt-1 inline-block"} />
              {lowerHumanize(tag)}
            </a>
          ))
        }
      </li>
    )} -->
    {
      entryDate && (
        <li class="mr-0 inline-block">
          <FaRegCalendarAlt className={"ml-2 -mt-1 inline-block"} />
          {entryDate}
        </li>
      )
    }
    {
      complexity > 0 && (
        <li class="mr-0 inline-block">
          <FaRegClock className={"ml-2 -mt-1 inline-block"} />
          {entryReadingTime}
        </li>
      )
    }
  </ul>
  <p class="">
    {entryDescription}
  </p>
</Card>
