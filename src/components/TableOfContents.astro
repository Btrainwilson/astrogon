---
import type { HeadingHierarchy } from "@/types/index";
import type { MarkdownHeading } from "astro";
import { createHeadingHierarchy } from "@/lib/utils/tocUtils";

interface Props {
  headings: MarkdownHeading[];
  tocDepth?: number;
}

const { headings, tocDepth = 3 } = Astro.props;
const heirarchy: HeadingHierarchy[] = createHeadingHierarchy(headings);
const toc = heirarchy.filter((heading) => heading.depth <= tocDepth);
---

{
  toc.length > 0 && (
    <div class="relative">
      <h2 class="text-xl border-none italic">On This Page</h2>
      <ul class="list-none m-0">
        {toc.map((heading) => (
          <li class=`${heading.depth === 2 ? "font-semibold" : "text-muted-foreground"}`>
            <a href={`#${heading.slug}`} class="text-sm w-full leading-none no-underline">
              {heading.text}
              </a>
          </li>
        ))}
      </ul>
    </div>
  )
}
