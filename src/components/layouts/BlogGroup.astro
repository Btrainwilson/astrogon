---
import Base from "@layouts/Base.astro";
import BlogCard from "@components/BlogCard.astro";
import Pagination from "@components/Pagination.astro";
import PageHeader from "@components/PageHeader.astro";
import BlogSidebar from "@components/BlogSidebar.astro";
import type { BlogIndex } from "@/types";

import config from "@/config/config.json";
import { getPages } from "@/lib/contentParser.astro";
import { sortByDate } from "@/lib/utils/sortFunctions";
import { getEntry } from "astro:content";
import type { BlogEntry } from "@/types";

interface Props {
  currentPage: number;
}

const { currentPage } = Astro.props;

const blogIndex = await getEntry("blog", "-index");
const entries = (await getPages("blog", sortByDate)) as BlogEntry[];

const indexOfLastEntry = currentPage * config.settings.pagination;
const indexOfFirstEntry = indexOfLastEntry - config.settings.pagination;
const currentEntries = entries.slice(indexOfFirstEntry, indexOfLastEntry);

const totalPages: number = Math.ceil(
  entries.length / config.settings.pagination
);
---

<Base title={blogIndex.data.title} description={blogIndex.data.description}>
  <PageHeader title={blogIndex.data.title} />
  <section class="section">
    <div class="flex container">
      <div class="row gx-5">
        <!-- blog posts -->
        <div class="lg:col-8">
          <div class="row">
            {
              currentEntries.map((entry) => (
                <div class="pb-4">
                  <BlogCard data={entry} />
                </div>
              ))
            }
          </div>
          <Pagination
            section="blog"
            currentPage={currentPage}
            totalPages={totalPages}
          />
        </div>
        <!-- sidebar -->
        <div
          class="hidden lg:col-4 lg:flex max-h-static_sidemenu sticky top-[4rem]"
        >
          <BlogSidebar />
        </div>
      </div>
    </div>
  </section>
</Base>
